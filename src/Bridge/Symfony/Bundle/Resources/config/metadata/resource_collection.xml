<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

        <service id="ApiPlatform\Core\Metadata\ResourceCollection\Factory\ResourceCollectionMetadataFactoryInterface" alias="api_platform.metadata.resource_collection.metadata_factory" />
        <service id="api_platform.metadata.resource_collection.metadata_factory" alias="api_platform.metadata.resource_collection.metadata_factory.attributes" />

        <service id="api_platform.metadata.resource_collection.metadata_factory.attributes" class="ApiPlatform\Core\Metadata\ResourceCollection\Factory\AttributeResourceCollectionMetadataFactory" public="false">
            <argument>null</argument>
            <argument>%api_platform.defaults%</argument>
        </service>

        <!-- compute legacy resources first -->
        <service id="api_platform.metadata.resource_collection.metadata_factory.legacy_resource_metadata" class="ApiPlatform\Core\Metadata\ResourceCollection\Factory\LegacyResourceMetadataResourceCollectionFactory" decorates="api_platform.metadata.resource_collection.metadata_factory" decoration-priority="1000" public="false">
            <argument type="service" id="api_platform.metadata.resource_collection.metadata_factory.legacy_resource_metadata.inner" />
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
            <argument>%api_platform.defaults%</argument>
        </service>

        <service id="api_platform.metadata.resource_collection.metadata_factory.legacy_subresource_metadata" class="ApiPlatform\Core\Metadata\ResourceCollection\Factory\LegacySubresourceMetadataResourceCollectionFactory" decorates="api_platform.metadata.resource_collection.metadata_factory" decoration-priority="1000" public="false">
            <argument type="service" id="api_platform.subresource_operation_factory" />
            <argument type="service" id="api_platform.metadata.resource.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.resource_collection.metadata_factory.legacy_subresource_metadata.inner" />
        </service>

        <service id="api_platform.metadata.resource_collection.metadata_factory.identifier" class="ApiPlatform\Core\Metadata\ResourceCollection\Factory\IdentifierResourceCollectionMetadataFactory" decorates="api_platform.metadata.resource_collection.metadata_factory" decoration-priority="600" public="false">
            <argument type="service" id="api_platform.metadata.resource_collection.metadata_factory.identifier.inner" />
            <argument type="service" id="api_platform.metadata.property.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.property.identifier_metadata_factory" />
        </service>

        <!-- must run after identifiers -->
        <service id="api_platform.metadata.resource_collection.metadata_factory.uri_template" class="ApiPlatform\Core\Metadata\ResourceCollection\Factory\UriTemplateResourceCollectionMetadataFactory" decorates="api_platform.metadata.resource_collection.metadata_factory" decoration-priority="500" public="false">
            <argument type="service" id="api_platform.path_segment_name_generator" />
            <argument type="service" id="api_platform.metadata.resource_collection.metadata_factory.uri_template.inner" />
        </service>

        <!-- must run after uri template -->
        <service id="api_platform.metadata.resource_collection.metadata_factory.operation_name" class="ApiPlatform\Core\Metadata\ResourceCollection\Factory\OperationNameResourceCollectionMetadataFactory" decorates="api_platform.metadata.resource_collection.metadata_factory" decoration-priority="200" public="false">
            <argument type="service" id="api_platform.metadata.resource_collection.metadata_factory.operation_name.inner" />
        </service>

        <service id="api_platform.metadata.resource_collection.metadata_factory.input_output" class="ApiPlatform\Core\Metadata\ResourceCollection\Factory\InputOutputResourceCollectionMetadataFactory" decorates="api_platform.metadata.resource_collection.metadata_factory" decoration-priority="200" public="false">
            <argument type="service" id="api_platform.metadata.resource_collection.metadata_factory.input_output.inner" />
        </service>

        <service id="api_platform.metadata.resource_collection.metadata_factory.php_doc" class="ApiPlatform\Core\Metadata\ResourceCollection\Factory\PhpDocResourceCollectionMetadataFactory" decorates="api_platform.metadata.resource_collection.metadata_factory" decoration-priority="200" public="false">
            <argument type="service" id="api_platform.metadata.resource_collection.metadata_factory.php_doc.inner" />
        </service>

        <service id="api_platform.metadata.resource_collection.metadata_factory.formats" class="ApiPlatform\Core\Metadata\ResourceCollection\Factory\FormatsResourceCollectionMetadataFactory" decorates="api_platform.metadata.resource_collection.metadata_factory" decoration-priority="200" public="false">
            <argument type="service" id="api_platform.metadata.resource_collection.metadata_factory.formats.inner" />
            <argument>%api_platform.formats%</argument>
            <argument>%api_platform.patch_formats%</argument>
        </service>

        <!-- must run after operation name -->
        <service id="api_platform.metadata.resource_collection.metadata_factory.links" class="ApiPlatform\Core\Metadata\ResourceCollection\Factory\LinksResourceCollectionMetadataFactory" decorates="api_platform.metadata.resource_collection.metadata_factory" decoration-priority="100" public="false">
            <argument type="service" id="api_platform.metadata.resource_collection.metadata_factory.links.inner" />
        </service>

        <!-- <service id="api_platform.metadata.resource_collection.metadata_factory.cached" class="ApiPlatform\Core\Metadata\ResourceCollection\Factory\CachedResourceCollectionMetadataFactory" decorates="api_platform.metadata.resource_collection.metadata_factory" decoration&#45;priority="&#45;10" public="false"> -->
        <!--     <argument type="service" id="api_platform.cache.metadata.resource_collection" /> -->
        <!--     <argument type="service" id="api_platform.metadata.resource_collection.metadata_factory.cached.inner" /> -->
        <!-- </service> -->

        <service id="api_platform.cache.metadata.resource_collection" parent="cache.system" public="false">
            <tag name="cache.pool" />
        </service>

        <!-- Property metadata used to compute identifiers -->
        <service id="api_platform.metadata.property.identifier_metadata_factory" alias="api_platform.metadata.property.identifier_metadata_factory.property_info" />

        <service id="api_platform.metadata.property.identifier_metadata_factory.property_info" class="ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyMetadataFactory" decorates="api_platform.metadata.property.identifier_metadata_factory" public="false">
            <argument type="service" id="api_platform.property_info" />
        </service>

        <service id="api_platform.metadata.property.identifier_metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Property\Factory\AnnotationPropertyMetadataFactory" decorates="api_platform.metadata.property.identifier_metadata_factory" public="false">
            <argument type="service" id="annotation_reader" />
            <argument type="service" id="api_platform.metadata.property.identifier_metadata_factory.annotation.inner" />
        </service>
    </services>

</container>
